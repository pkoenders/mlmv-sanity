var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { useLayer } from './hooks';
import { LayerProvider } from './provider';
const Root = styled.div `
  position: relative;
`;
export const Layer = forwardRef((_a, ref) => {
    var { depth } = _a, restProps = __rest(_a, ["depth"]);
    return (React.createElement(LayerProvider, { baseDepth: depth, id: restProps.id },
        React.createElement(LayerChildren, Object.assign({}, restProps, { ref: ref }))));
});
Layer.displayName = 'Layer';
const LayerChildren = forwardRef((_a, ref) => {
    var { children, style = {} } = _a, restProps = __rest(_a, ["children", "style"]);
    const layer = useLayer() || { depth: 0 };
    return (React.createElement(Root, Object.assign({ "data-ui": "Layer" }, restProps, { ref: ref, style: Object.assign(Object.assign({}, style), { zIndex: layer.depth }) }), children));
});
LayerChildren.displayName = 'LayerChildren';
//# sourceMappingURL=layer.js.map