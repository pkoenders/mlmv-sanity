"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gridItemStyle = void 0;
var helpers_1 = require("../helpers");
function gridItemStyle() {
    return [
        responsiveGridItemRowStyle,
        responsiveGridItemRowStartStyle,
        responsiveGridItemRowEndStyle,
        responsiveGridItemColumnStyle,
        responsiveGridItemColumnStartStyle,
        responsiveGridItemColumnEndStyle,
    ];
}
exports.gridItemStyle = gridItemStyle;
var GRID_ITEM_ROW = {
    auto: 'auto',
    full: '1 / -1',
};
var GRID_ITEM_COLUMN = {
    auto: 'auto',
    full: '1 / -1',
};
function responsiveGridItemRowStyle(_a) {
    var row = _a.row, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(row).map(function (val) {
        if (typeof val === 'number') {
            return { gridRow: "span " + val + " / span " + val };
        }
        return { gridRow: GRID_ITEM_ROW[val] };
    }));
}
function responsiveGridItemRowStartStyle(_a) {
    var rowStart = _a.rowStart, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(rowStart).map(function (val) { return ({ gridRowStart: val }); }));
}
function responsiveGridItemRowEndStyle(_a) {
    var rowEnd = _a.rowEnd, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(rowEnd).map(function (val) { return ({ gridRowEnd: val }); }));
}
function responsiveGridItemColumnStyle(_a) {
    var column = _a.column, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(column).map(function (val) {
        if (typeof val === 'number') {
            return { gridColumn: "span " + val + " / span " + val };
        }
        return { gridColumn: GRID_ITEM_COLUMN[val] };
    }));
}
function responsiveGridItemColumnStartStyle(_a) {
    var columnStart = _a.columnStart, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(columnStart).map(function (val) { return ({ gridColumnStart: val }); }));
}
function responsiveGridItemColumnEndStyle(_a) {
    var columnEnd = _a.columnEnd, theme = _a.theme;
    return helpers_1.responsive(theme.sanity.media, helpers_1.getResponsiveProp(columnEnd).map(function (val) { return ({ gridColumnEnd: val }); }));
}
//# sourceMappingURL=gridItemStyle.js.map