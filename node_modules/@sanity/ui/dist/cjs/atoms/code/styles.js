"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.codeBaseStyles = void 0;
var styled_components_1 = require("styled-components");
function codeSyntaxHighlightingStyles(_a) {
    var theme = _a.theme;
    var color = theme.sanity.color.syntax;
    return styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    & .token {\n      &.atrule {\n        color: ", ";\n      }\n      &.attr-name {\n        color: ", ";\n      }\n      &.attr-value {\n        color: ", ";\n      }\n      &.attribute {\n        color: ", ";\n      }\n      &.boolean {\n        color: ", ";\n      }\n      &.builtin {\n        color: ", ";\n      }\n      &.cdata {\n        color: ", ";\n      }\n      &.char {\n        color: ", ";\n      }\n      &.class {\n        color: ", ";\n      }\n      &.class-name {\n        color: ", ";\n      }\n      &.comment {\n        color: ", ";\n      }\n      &.constant {\n        color: ", ";\n      }\n      &.deleted {\n        color: ", ";\n      }\n      &.doctype {\n        color: ", ";\n      }\n      &.entity {\n        color: ", ";\n      }\n      &.function {\n        color: ", ";\n      }\n      &.hexcode {\n        color: ", ";\n      }\n      &.id {\n        color: ", ";\n      }\n      &.important {\n        color: ", ";\n      }\n      &.inserted {\n        color: ", ";\n      }\n      &.keyword {\n        color: ", ";\n      }\n      &.number {\n        color: ", ";\n      }\n      &.operator {\n        color: ", ";\n      }\n      &.prolog {\n        color: ", ";\n      }\n      &.property {\n        color: ", ";\n      }\n      &.pseudo-class {\n        color: ", ";\n      }\n      &.pseudo-element {\n        color: ", ";\n      }\n      &.punctuation {\n        color: ", ";\n      }\n      &.regex {\n        color: ", ";\n      }\n      &.selector {\n        color: ", ";\n      }\n      &.string {\n        color: ", ";\n      }\n      &.symbol {\n        color: ", ";\n      }\n      &.tag {\n        color: ", ";\n      }\n      &.unit {\n        color: ", ";\n      }\n      &.url {\n        color: ", ";\n      }\n      &.variable {\n        color: ", ";\n      }\n    }\n  "], ["\n    & .token {\n      &.atrule {\n        color: ", ";\n      }\n      &.attr-name {\n        color: ", ";\n      }\n      &.attr-value {\n        color: ", ";\n      }\n      &.attribute {\n        color: ", ";\n      }\n      &.boolean {\n        color: ", ";\n      }\n      &.builtin {\n        color: ", ";\n      }\n      &.cdata {\n        color: ", ";\n      }\n      &.char {\n        color: ", ";\n      }\n      &.class {\n        color: ", ";\n      }\n      &.class-name {\n        color: ", ";\n      }\n      &.comment {\n        color: ", ";\n      }\n      &.constant {\n        color: ", ";\n      }\n      &.deleted {\n        color: ", ";\n      }\n      &.doctype {\n        color: ", ";\n      }\n      &.entity {\n        color: ", ";\n      }\n      &.function {\n        color: ", ";\n      }\n      &.hexcode {\n        color: ", ";\n      }\n      &.id {\n        color: ", ";\n      }\n      &.important {\n        color: ", ";\n      }\n      &.inserted {\n        color: ", ";\n      }\n      &.keyword {\n        color: ", ";\n      }\n      &.number {\n        color: ", ";\n      }\n      &.operator {\n        color: ", ";\n      }\n      &.prolog {\n        color: ", ";\n      }\n      &.property {\n        color: ", ";\n      }\n      &.pseudo-class {\n        color: ", ";\n      }\n      &.pseudo-element {\n        color: ", ";\n      }\n      &.punctuation {\n        color: ", ";\n      }\n      &.regex {\n        color: ", ";\n      }\n      &.selector {\n        color: ", ";\n      }\n      &.string {\n        color: ", ";\n      }\n      &.symbol {\n        color: ", ";\n      }\n      &.tag {\n        color: ", ";\n      }\n      &.unit {\n        color: ", ";\n      }\n      &.url {\n        color: ", ";\n      }\n      &.variable {\n        color: ", ";\n      }\n    }\n  "])), color.atrule, color.attrName, color.attrValue, color.attribute, color.boolean, color.builtin, color.cdata, color.char, color.class, color.className, color.comment, color.constant, color.deleted, color.doctype, color.entity, color.function, color.hexcode, color.id, color.important, color.inserted, color.keyword, color.number, color.operator, color.prolog, color.property, color.pseudoClass, color.pseudoElement, color.punctuation, color.regex, color.selector, color.string, color.symbol, color.tag, color.unit, color.url, color.variable);
}
function codeBaseStyles(props) {
    var muted = props.muted;
    return styled_components_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    ", "\n\n    &:before {\n      content: '';\n      display: block;\n      height: 0;\n    }\n\n    & code {\n      font-family: inherit;\n\n      &.refractor {\n        ", "\n      }\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  "], ["\n    ",
        "\n\n    &:before {\n      content: '';\n      display: block;\n      height: 0;\n    }\n\n    & code {\n      font-family: inherit;\n\n      &.refractor {\n        ", "\n      }\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  "])), muted && styled_components_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      color: var(--card-muted-fg-color);\n    "], ["\n      color: var(--card-muted-fg-color);\n    "]))), codeSyntaxHighlightingStyles);
}
exports.codeBaseStyles = codeBaseStyles;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=styles.js.map